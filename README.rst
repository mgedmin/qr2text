qr2text
=======

Convert SVG images containing barcodes generated by PyQRCode to ASCII art,
for displaying in a terminal.

Because I'm a weird person who reads mail using Mutt over SSH in a terminal,
and sometimes people send me QR codes for setting up TOTP authentication.

Usage::

    qr2text FILENAME.svg

Example::

    $ python3
    >>> import pyqrcode
    >>> qr = pyqrcode.create('Hello world!')
    >>> qr.svg('hello.svg')

    $ qr2text --white-background hello.svg


        █▀▀▀▀▀█ ▀▄█▄▀▄▀▀▄ █▀▀▀▀▀█
        █ ███ █ ▀ █▄  █   █ ███ █
        █ ▀▀▀ █ ▀▀▄▄▀ ▀ ▄ █ ▀▀▀ █
        ▀▀▀▀▀▀▀ █▄█▄▀▄▀▄▀ ▀▀▀▀▀▀▀
         ▄▄▄▄▀▀ ▄▀▄▀██▀▀▀ ▀▄█▄▀ ▀
        ▀▀▀▀▀▄▀▀▄▀▄▀▄ ▀▀█▀▄ ▀█ ██
        ▄█▀▄▀ ▀▀▄  ▄██▄▀  ▀▄ █▄ ▀
        █   ▄ ▀▀▀█▄  ██▀█▀██▀█▄▀█
        ▀  ▀ ▀▀▀▄█▄▀▄█▀▀█▀▀▀███ ▄
        █▀▀▀▀▀█ ▄  █▀▄▀██ ▀ █   █
        █ ███ █  █▀▄ ▄  ▀▀█▀▀▀█▀▄
        █ ▀▀▀ █  ▄▀▀▀▀  ▀ ▄█▄█  █
        ▀▀▀▀▀▀▀  ▀ ▀▀  ▀▀ ▀ ▀   ▀


Note: you may have to tell qr2text whether your terminal is black-on-white
(--white-background) or white-on-black (--black-background).  Some QR code
scanners don't care, but others will refuse to recognize inverted QR codes.
